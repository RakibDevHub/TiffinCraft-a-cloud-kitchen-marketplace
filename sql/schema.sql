-- Drop tables in reverse dependency order (if needed for resetting)
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE reviews CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE flash_deals CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE subscriptions CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE orders CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE menu_items CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE sellers CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE buyers CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE kitchen_verifications CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE areas CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE users CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/

-- USERS table (shared for buyers/sellers/admins)
CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(10) CHECK (role IN ('buyer', 'seller', 'admin')),
    created_at DATE DEFAULT SYSDATE
);

-- AREAS table
CREATE TABLE areas (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE
);

-- BUYERS table
CREATE TABLE buyers (
    user_id NUMBER PRIMARY KEY,
    address VARCHAR2(255),
    area_id NUMBER,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (area_id) REFERENCES areas(id)
);

-- SELLERS table
CREATE TABLE sellers (
    user_id NUMBER PRIMARY KEY,
    kitchen_name VARCHAR2(100),
    area_id NUMBER,
    status VARCHAR2(20) DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (area_id) REFERENCES areas(id)
);

-- MENU_ITEMS table
CREATE TABLE menu_items (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    seller_id NUMBER NOT NULL,
    name VARCHAR2(100) NOT NULL,
    description VARCHAR2(255),
    price NUMBER(10,2) NOT NULL,
    is_available CHAR(1) DEFAULT 'Y' CHECK (is_available IN ('Y', 'N')),
    created_at DATE DEFAULT SYSDATE,
    FOREIGN KEY (seller_id) REFERENCES sellers(user_id)
);

-- ORDERS table
CREATE TABLE orders (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER NOT NULL,
    seller_id NUMBER NOT NULL,
    item_id NUMBER NOT NULL,
    quantity NUMBER NOT NULL,
    total_price NUMBER(10,2),
    order_status VARCHAR2(20) DEFAULT 'placed' CHECK (order_status IN ('placed', 'confirmed', 'delivered', 'cancelled')),
    order_time DATE DEFAULT SYSDATE,
    FOREIGN KEY (buyer_id) REFERENCES buyers(user_id),
    FOREIGN KEY (seller_id) REFERENCES sellers(user_id),
    FOREIGN KEY (item_id) REFERENCES menu_items(id)
);

-- SUBSCRIPTIONS table (buyer subscribes to a seller)
CREATE TABLE subscriptions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER NOT NULL,
    seller_id NUMBER NOT NULL,
    subscribed_at DATE DEFAULT SYSDATE,
    FOREIGN KEY (buyer_id) REFERENCES buyers(user_id),
    FOREIGN KEY (seller_id) REFERENCES sellers(user_id),
    UNIQUE (buyer_id, seller_id)
);

-- FLASH_DEALS table
CREATE TABLE flash_deals (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id NUMBER NOT NULL,
    discount_percent NUMBER(5,2) CHECK (discount_percent BETWEEN 0 AND 100),
    start_time DATE NOT NULL,
    end_time DATE NOT NULL,
    FOREIGN KEY (item_id) REFERENCES menu_items(id)
);

-- REVIEWS table
CREATE TABLE reviews (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER NOT NULL,
    item_id NUMBER NOT NULL,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    comments VARCHAR2(500),
    created_at DATE DEFAULT SYSDATE,
    FOREIGN KEY (buyer_id) REFERENCES buyers(user_id),
    FOREIGN KEY (item_id) REFERENCES menu_items(id)
);

-- KITCHEN_VERIFICATIONS table (admin verifies seller kitchens)
CREATE TABLE kitchen_verifications (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    seller_id NUMBER NOT NULL,
    verified_by_admin_id NUMBER NOT NULL,
    verification_status VARCHAR2(20) DEFAULT 'pending' CHECK (verification_status IN ('pending', 'approved', 'rejected')),
    verification_date DATE DEFAULT SYSDATE,
    FOREIGN KEY (seller_id) REFERENCES sellers(user_id),
    FOREIGN KEY (verified_by_admin_id) REFERENCES users(id)
);