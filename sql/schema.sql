DROP TABLE ADMIN_LOGS CASCADE CONSTRAINTS;
DROP TABLE CATEGORIES CASCADE CONSTRAINTS;
DROP TABLE FAVORITES CASCADE CONSTRAINTS;
DROP TABLE KITCHENS CASCADE CONSTRAINTS;
DROP TABLE LOYALTY_POINTS CASCADE CONSTRAINTS;
DROP TABLE MENU_ITEMS CASCADE CONSTRAINTS;
DROP TABLE NOTIFICATIONS CASCADE CONSTRAINTS;
DROP TABLE PROMOTIONS CASCADE CONSTRAINTS;
DROP TABLE SERVICE_AREAS CASCADE CONSTRAINTS;
DROP TABLE SUBSCRIPTIONS CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;

-- Users table
CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(20) CHECK (role IN ('buyer', 'seller', 'admin')) NOT NULL,
    phone_number VARCHAR2(20),
    profile_image VARCHAR2(255),
    address VARCHAR2(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status NUMBER,
    suspended_until TIMESTAMP
);

-- Kitchens / Stores
CREATE TABLE kitchens (
    kitchen_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    owner_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    name VARCHAR2(100) NOT NULL,
    description CLOB,
    address VARCHAR2(255),
    kitchen_image VARCHAR2(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_approved NUMBER,
    suspended_until TIMESTAMP
);

-- Service Areas for each kitchen
CREATE TABLE service_areas (
    area_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE kitchen_service_areas (
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id) ON DELETE CASCADE,
    area_id NUMBER REFERENCES service_areas(area_id) ON DELETE CASCADE,
    PRIMARY KEY (kitchen_id, area_id)
);

-- Categories of food (e.g., Bengali, Chinese, Healthy)
CREATE TABLE categories (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    description VARCHAR2(255)
);

-- Menu Items under a kitchen
CREATE TABLE menu_items (
    item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id) ON DELETE CASCADE,
    category_id NUMBER REFERENCES categories(category_id),
    name VARCHAR2(100) NOT NULL,
    description CLOB,
    price NUMBER(10, 2) NOT NULL,
    item_image VARCHAR2(255),
    available NUMBER(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Orders placed by buyers
CREATE TABLE orders (
    order_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id),
    total_amount NUMBER(10, 2) NOT NULL,
    status VARCHAR2(50) DEFAULT 'pending',
    ordered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Ordered menu items
CREATE TABLE order_items (
    order_item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER REFERENCES orders(order_id) ON DELETE CASCADE,
    item_id NUMBER REFERENCES menu_items(item_id),
    quantity NUMBER NOT NULL,
    price_each NUMBER(10, 2) NOT NULL
);

-- Payment records
CREATE TABLE payments (
    payment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER UNIQUE REFERENCES orders(order_id) ON DELETE CASCADE,
    user_id NUMBER REFERENCES users(user_id),
    amount NUMBER(10,2) NOT NULL,
    method VARCHAR2(50),
    status VARCHAR2(50),
    paid_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Subscriptions for recurring orders
CREATE TABLE subscriptions (
    subscription_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id),
    start_date DATE,
    end_date DATE,
    frequency VARCHAR2(50),
    status VARCHAR2(50) DEFAULT 'active'
);

-- Reviews for kitchens
CREATE TABLE kitchen_reviews (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id) ON DELETE CASCADE,
    user_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    comments CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Reviews for menu items
CREATE TABLE item_reviews (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id NUMBER REFERENCES menu_items(item_id) ON DELETE CASCADE,
    user_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    comments CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Flash deals / promotions
CREATE TABLE promotions (
    promotion_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id),
    item_id NUMBER REFERENCES menu_items(item_id),
    title VARCHAR2(100),
    description VARCHAR2(255),
    discount_percentage NUMBER(5,2),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);

-- Loyalty points tracking
CREATE TABLE loyalty_points (
    user_id NUMBER PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    points NUMBER DEFAULT 0,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Favorites (users can favorite kitchens or items)
CREATE TABLE favorites (
    favorite_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    kitchen_id NUMBER REFERENCES kitchens(kitchen_id),
    item_id NUMBER REFERENCES menu_items(item_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Admin action logs
CREATE TABLE admin_logs (
    log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES users(user_id),
    action CLOB,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Notifications for users
CREATE TABLE notifications (
    notification_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    message VARCHAR2(255),
    read_status NUMBER(1) DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Delivery status tracking
CREATE TABLE delivery_status (
    delivery_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER REFERENCES orders(order_id) ON DELETE CASCADE,
    status VARCHAR2(100),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Customer support tickets
CREATE TABLE support_tickets (
    ticket_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER REFERENCES users(user_id) ON DELETE CASCADE,
    order_id NUMBER REFERENCES orders(order_id),
    message CLOB,
    status VARCHAR2(50) DEFAULT 'open',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
